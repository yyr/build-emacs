# -*- mode: shell-script; -*-

function announce() {
    echo "
============================================
$@
============================================
"
}

function error_convay () {
    announce "
      XXXXXXXXXXXXXXXXXXXXXXXXXXXX
ERROR: $@
      XXXXXXXXXXXXXXXXXXXXXXXXXXXX
"
    exit 24
}

function run_autogen() {        # run autogen.sh
    announce "running autogen.sh"
    ./autogen.sh &> autogen.log

    # if autogen fails fallback method
    if [ $? -ne 0 ]; then
        ./autogen/copy_autogen
    fi
}

function run_configure()
{
    if [ ! -f configure ]; then
        run_autogen
    fi

    announce "running configure"
    ./configure --prefix=$INSTALL_DIR  &> config.log ||
    error_convay "while running 'configure' check config.log"
}

function run_make()
{
    if [ ! -f Makefile ]; then
        run_configure
    fi
    make && make install
}

function build_emacs()
{
    run_configure
    run_make

    if [ -f $SCRIPT_DIR/post-build-hook ]; then
        . $SCRIPT_DIR/post-build-hook
    fi
}


function build_emacs_git_head()
{
    # change to master, pull for updates and call build
    git checkout master
    git pull origin master

    rev=$(git rev-parse --short HEAD)
    INSTALL_DIR=$HOME/local/emacs-$rev
    build_emacs

}

function build_emacs_from_tag()
{
    if [ $git_tag == "latest" ]; then
        latest_tag=$(git describe --abbrev=0 --tags)
        git checkout $latest_tag
        # since we are checking out to to rev make sure repo is clean
        git clean -xdf
        build_emacs
    fi
}
